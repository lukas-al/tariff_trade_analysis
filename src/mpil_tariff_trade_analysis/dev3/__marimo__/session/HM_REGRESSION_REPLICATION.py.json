{
  "version": "1",
  "metadata": {
    "marimo_version": "0.13.8"
  },
  "cells": [
    {
      "id": "Hbol",
      "code_hash": "954928f90026e1c392ae3c6bf352fa7c",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "MJUe",
      "code_hash": "ba01bdce9dd51e015a1d3b801900412a",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "vblA",
      "code_hash": "8b9d92632239551ad4cf4ced7f33db0c",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><h1 id=\"huang-mix-regression-replication\">Huang-Mix Regression replication</h1>\n<span class=\"paragraph\">Replicating the Huang-Mix regression, limiting the rest-of-world to just the UK. </span>\n<span class=\"paragraph\">The Huang-Mix paper, <a href=\"https://drive.google.com/file/d/1DQABGIs2oD2wt9pMN89uppp44Gc6FIm6/view\" rel=\"noopener\" target=\"_blank\">Trade Wars and Rumors of Trade Wars:\nThe Dynamic Effects of the U.S.\u2013China Tariff Hikes</a> is primarily focussed on computing the welfare impacts of tariffs as a trade policy. It focuses on the price impacts of tariffs, including various expectations and uncertainty channels. This is applied through a large general equillibrium DSGE model, including the behaviour of multiple agents. </span>\n<span class=\"paragraph\">We am not interested in replicated in the entirety of the paper. Instead, we are interested in just the panel regression used to inform the elasiticty parameters in the model. Where the paper calculates the redirection of trade values / volumes to the ROW, we're interested in isolating the effect to just the UK. </span>\n<span class=\"paragraph\">To answer, empirically, the following question:</span>\n<blockquote>\n<span class=\"paragraph\">What was the impact of the 2017-20 US-China trade war on UK imports from China.</span>\n</blockquote>\n<h2 id=\"steps\">Steps</h2>\n<h3 id=\"replicate-original-spec\">Replicate original spec</h3>\n<span class=\"paragraph\">We initially want to replicate their original specification, using our data. This is to ensure our data is good and that we're following the correct process. For a first stab we'd do the regression at the bottom of page 7 - essentially the direct effect (in quantities) for US-China. This means we need to:</span>\n<ol>\n<li>replicate the input data as required for the regression.</li>\n<li>set up the regression as specified in the original paper.</li>\n<li>run the regression.</li>\n<li>extract and chart the results.</li>\n</ol>\n<h3 id=\"implement-our-spec\">Implement our spec</h3>\n<ol>\n<li>Design the input data required for the model</li>\n<li>Specify the panel regression as we require, incl. fixed effects. </li>\n<li>Run the regression, estimate the parameters</li>\n<li>Chart the results under a range of specifications, fixed effects, etc. </li>\n</ol>\n<h2 id=\"regression-specification\">Regression Specification</h2>\n<span class=\"paragraph\">\ud83c\udfd7\ufe0f TBD</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "bkHC",
      "code_hash": "12ac065041cb669056098a813d7aaf6c",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><h1 id=\"replicating-the-original-specification\">Replicating the original specification</h1>\n<span class=\"paragraph\">Replicating the regression as on page 7 of the paper.</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "lEQa",
      "code_hash": "831b7971e308b172d55f778d760675d2",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "No such file or directory (os error 2): data/final/unified_trade_tariff_partitioned/\n\nThis error occurred with the following context stack:\n\t[1] 'parquet scan'\n\t[2] 'slice'\n\t[3] 'sink'\n",
          "traceback": []
        }
      ],
      "console": [
        {
          "type": "stream",
          "name": "stderr",
          "text": "<span class=\"codehilite\"><div class=\"highlight\"><pre><span></span><span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/marimo/_runtime/executor.py&quot;</span>, line <span class=\"m\">123</span>, in <span class=\"n\">execute_cell</span>\n<span class=\"w\">    </span><span class=\"k\">return</span> <span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">last_expr</span><span class=\"p\">,</span> <span class=\"n\">glbls</span><span class=\"p\">)</span>\n  File <span class=\"nb\">&quot;/var/folders/df/j998nyn11sdf0w5cf48pny6m0000gn/T/marimo_85641/__marimo__cell_lEQa_.py&quot;</span>, line <span class=\"m\">5</span>, in <span class=\"n\">&lt;module&gt;</span>\n<span class=\"w\">    </span><span class=\"n\">unified_lf</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"pm\">~~~~~~~~~~~~~~~~~~~~~~~~~^^</span>\n  File <span class=\"nb\">&quot;/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/polars/_utils/deprecation.py&quot;</span>, line <span class=\"m\">93</span>, in <span class=\"n\">wrapper</span>\n<span class=\"w\">    </span><span class=\"k\">return</span> <span class=\"n\">function</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  File <span class=\"nb\">&quot;/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/polars/lazyframe/frame.py&quot;</span>, line <span class=\"m\">2224</span>, in <span class=\"n\">collect</span>\n<span class=\"w\">    </span><span class=\"k\">return</span> <span class=\"n\">wrap_df</span><span class=\"p\">(</span><span class=\"n\">ldf</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"p\">))</span>\n<span class=\"w\">                   </span><span class=\"pm\">~~~~~~~~~~~^^^^^^^^^^^^^^^^^^</span>\n<span class=\"gr\">FileNotFoundError</span>: <span class=\"n\">No such file or directory (os error 2): data/final/unified_trade_tariff_partitioned/</span>\n\n<span class=\"x\">This error occurred with the following context stack:</span>\n<span class=\"x\">\t[1] &#39;parquet scan&#39;</span>\n<span class=\"x\">\t[2] &#39;slice&#39;</span>\n<span class=\"x\">\t[3] &#39;sink&#39;</span>\n</pre></div>\n</span>"
        },
        {
          "type": "stream",
          "name": "stderr",
          "text": "\u001b[31m[E 250521 08:43:43 get_datasets:62]\u001b(B\u001b[m Failed to get table data for variable unified_lf\n    Traceback (most recent call last):\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/marimo/_data/get_datasets.py\", line 50, in _get_data_table\n        for column_name, column_type in table.get_field_types()\n                                        ~~~~~~~~~~~~~~~~~~~~~^^\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/marimo/_plugins/ui/_impl/tables/table_manager.py\", line 140, in get_field_types\n        for column_name in self.get_column_names()\n                           ~~~~~~~~~~~~~~~~~~~~~^^\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/marimo/_plugins/ui/_impl/tables/narwhals_table.py\", line 432, in get_column_names\n        column_names = self.nw_schema.names()\n                       ^^^^^^^^^^^^^^\n      File \"/Users/lukasalemu/.local/share/uv/python/cpython-3.13.2-macos-aarch64-none/lib/python3.13/functools.py\", line 1042, in __get__\n        val = self.func(instance)\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/marimo/_plugins/ui/_impl/tables/narwhals_table.py\", line 212, in nw_schema\n        return cast(nw.Schema, self.data.collect_schema())\n                               ~~~~~~~~~~~~~~~~~~~~~~~~^^\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/narwhals/dataframe.py\", line 2504, in collect_schema\n        return super().collect_schema()\n               ~~~~~~~~~~~~~~~~~~~~~~^^\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/narwhals/dataframe.py\", line 129, in collect_schema\n        native_schema = dict(self._compliant_frame.collect_schema())\n                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/narwhals/_polars/dataframe.py\", line 649, in collect_schema\n        raise catch_polars_exception(e, self._backend_version) from None\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/narwhals/_polars/dataframe.py\", line 647, in collect_schema\n        collected_schema = self.native.collect_schema()\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/polars/lazyframe/frame.py\", line 2446, in collect_schema\n        return Schema(self._ldf.collect_schema(), check_dtypes=False)\n                      ~~~~~~~~~~~~~~~~~~~~~~~~^^\n    FileNotFoundError: No such file or directory (os error 2): data/final/unified_trade_tariff_partitioned/\n"
        }
      ]
    },
    {
      "id": "PKri",
      "code_hash": "19a6e99bb145731e2da2f90735fc6459",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "Xref",
      "code_hash": "c67cfe84ea674d994348d46c71924936",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "An ancestor raised an exception (FileNotFoundError): ",
          "traceback": []
        }
      ],
      "console": [
        {
          "type": "stream",
          "name": "stdout",
          "text": "Input lf post forward/backward fill & filter\n"
        },
        {
          "type": "stream",
          "name": "stdout",
          "text": "shape: (5, 20)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 year \u2506 reporter_c \u2506 partner_co \u2506 product_co \u2506 \u2026 \u2506 unit_value \u2506 unit_valu \u2506 effective \u2506 official_ \u2502\n\u2502 ---  \u2506 ountry     \u2506 untry      \u2506 de         \u2506   \u2506 _arcsinh   \u2506 e_arcsinh \u2506 _tariff_a \u2506 effective \u2502\n\u2502 i32  \u2506 ---        \u2506 ---        \u2506 ---        \u2506   \u2506 ---        \u2506 _detrende \u2506 rcsinh    \u2506 _tariff   \u2502\n\u2502      \u2506 str        \u2506 str        \u2506 str        \u2506   \u2506 f64        \u2506 d         \u2506 ---       \u2506 ---       \u2502\n\u2502      \u2506            \u2506            \u2506            \u2506   \u2506            \u2506 ---       \u2506 f32       \u2506 f32       \u2502\n\u2502      \u2506            \u2506            \u2506            \u2506   \u2506            \u2506 f64       \u2506           \u2506           \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 1995 \u2506 380        \u2506 826        \u2506 020230     \u2506 \u2026 \u2506 2.238178   \u2506 1.564807  \u2506 null      \u2506 0.0       \u2502\n\u2502 1995 \u2506 380        \u2506 826        \u2506 010210     \u2506 \u2026 \u2506 2.135703   \u2506 1.277538  \u2506 null      \u2506 0.0       \u2502\n\u2502 1995 \u2506 380        \u2506 826        \u2506 030562     \u2506 \u2026 \u2506 2.409254   \u2506 1.222953  \u2506 null      \u2506 0.0       \u2502\n\u2502 1995 \u2506 380        \u2506 826        \u2506 020319     \u2506 \u2026 \u2506 3.57995    \u2506 3.359238  \u2506 null      \u2506 0.0       \u2502\n\u2502 1995 \u2506 380        \u2506 826        \u2506 020742     \u2506 \u2026 \u2506 1.162274   \u2506 0.032513  \u2506 null      \u2506 0.0       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"
        }
      ]
    },
    {
      "id": "SFPL",
      "code_hash": "2f617c9ce83a495102f1aefddd44ea01",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "An ancestor raised an exception (FileNotFoundError): ",
          "traceback": []
        }
      ],
      "console": [
        {
          "type": "stream",
          "name": "stdout",
          "text": "<marimo-plotly data-figure='{&quot;data&quot;: [{&quot;mode&quot;: &quot;lines+markers&quot;, &quot;name&quot;: &quot;Raw Tariff&quot;, &quot;x&quot;: {&quot;dtype&quot;: &quot;i4&quot;, &quot;bdata&quot;: &quot;ywcAAMwHAADNBwAAzgcAAM8HAADQBwAA0QcAANIHAADTBwAA1AcAANUHAADWBwAA1wcAANgHAADZBwAA2gcAANsHAADcBwAA3QcAAN4HAADfBwAA4AcAAOEHAADiBwAA4wcAAOQHAADlBwAA5gcAAOcHAAA=&quot;}, &quot;y&quot;: {&quot;dtype&quot;: &quot;f4&quot;, &quot;bdata&quot;: &quot;AADAfwAAwH8zMxNBAADAfwAAwH9cjwtCZmYIQh+FCUJmZgVCzczcQa5HqUGkcIFBw/VMQT0KM0FmZi5Bmpk9QUjhQkGamT1BexQ2QVK4LkE9Ci9BFK4vQTMzM0HNzDxBZmYGQc3MVkEAAFJBUrgkQbgeQ0E=&quot;}, &quot;type&quot;: &quot;scatter&quot;, &quot;xaxis&quot;: &quot;x&quot;, &quot;yaxis&quot;: &quot;y&quot;}, {&quot;line&quot;: {&quot;color&quot;: &quot;orange&quot;}, &quot;mode&quot;: &quot;lines+markers&quot;, &quot;name&quot;: &quot;Filtered Tariff (ffill + bfill)&quot;, &quot;x&quot;: {&quot;dtype&quot;: &quot;i4&quot;, &quot;bdata&quot;: &quot;ywcAAMwHAADNBwAAzgcAAM8HAADQBwAA0QcAANIHAADTBwAA1AcAANUHAADWBwAA1wcAANgHAADZBwAA2gcAANsHAADcBwAA3QcAAN4HAADfBwAA4AcAAOEHAADiBwAA4wcAAOQHAADlBwAA5gcAAOcHAAA=&quot;}, &quot;y&quot;: {&quot;dtype&quot;: &quot;f4&quot;, &quot;bdata&quot;: &quot;MzMTQTMzE0EzMxNBMzMTQTMzE0FcjwtCZmYIQh+FCUJmZgVCzczcQa5HqUGkcIFBw/VMQT0KM0FmZi5Bmpk9QUjhQkGamT1BexQ2QVK4LkE9Ci9BFK4vQTMzM0HNzDxBZmYGQc3MVkEAAFJBUrgkQbgeQ0E=&quot;}, &quot;type&quot;: &quot;scatter&quot;, &quot;xaxis&quot;: &quot;x2&quot;, &quot;yaxis&quot;: &quot;y2&quot;}], &quot;layout&quot;: {&quot;template&quot;: {&quot;data&quot;: {&quot;histogram2dcontour&quot;: [{&quot;type&quot;: &quot;histogram2dcontour&quot;, &quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]]}], &quot;choropleth&quot;: [{&quot;type&quot;: &quot;choropleth&quot;, &quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}], &quot;histogram2d&quot;: [{&quot;type&quot;: &quot;histogram2d&quot;, &quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]]}], &quot;heatmap&quot;: [{&quot;type&quot;: &quot;heatmap&quot;, &quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]]}], &quot;contourcarpet&quot;: [{&quot;type&quot;: &quot;contourcarpet&quot;, &quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}], &quot;contour&quot;: [{&quot;type&quot;: &quot;contour&quot;, &quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]]}], &quot;surface&quot;: [{&quot;type&quot;: &quot;surface&quot;, &quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}, &quot;colorscale&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]]}], &quot;mesh3d&quot;: [{&quot;type&quot;: &quot;mesh3d&quot;, &quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}], &quot;scatter&quot;: [{&quot;fillpattern&quot;: {&quot;fillmode&quot;: &quot;overlay&quot;, &quot;size&quot;: 10, &quot;solidity&quot;: 0.2}, &quot;type&quot;: &quot;scatter&quot;}], &quot;parcoords&quot;: [{&quot;type&quot;: &quot;parcoords&quot;, &quot;line&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}}], &quot;scatterpolargl&quot;: [{&quot;type&quot;: &quot;scatterpolargl&quot;, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}}], &quot;bar&quot;: [{&quot;error_x&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;error_y&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;marker&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#E5ECF6&quot;, &quot;width&quot;: 0.5}, &quot;pattern&quot;: {&quot;fillmode&quot;: &quot;overlay&quot;, &quot;size&quot;: 10, &quot;solidity&quot;: 0.2}}, &quot;type&quot;: &quot;bar&quot;}], &quot;scattergeo&quot;: [{&quot;type&quot;: &quot;scattergeo&quot;, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}}], &quot;scatterpolar&quot;: [{&quot;type&quot;: &quot;scatterpolar&quot;, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}}], &quot;histogram&quot;: [{&quot;marker&quot;: {&quot;pattern&quot;: {&quot;fillmode&quot;: &quot;overlay&quot;, &quot;size&quot;: 10, &quot;solidity&quot;: 0.2}}, &quot;type&quot;: &quot;histogram&quot;}], &quot;scattergl&quot;: [{&quot;type&quot;: &quot;scattergl&quot;, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}}], &quot;scatter3d&quot;: [{&quot;type&quot;: &quot;scatter3d&quot;, &quot;line&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}}], &quot;scattermap&quot;: [{&quot;type&quot;: &quot;scattermap&quot;, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}}], &quot;scattermapbox&quot;: [{&quot;type&quot;: &quot;scattermapbox&quot;, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}}], &quot;scatterternary&quot;: [{&quot;type&quot;: &quot;scatterternary&quot;, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}}], &quot;scattercarpet&quot;: [{&quot;type&quot;: &quot;scattercarpet&quot;, &quot;marker&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}}], &quot;carpet&quot;: [{&quot;aaxis&quot;: {&quot;endlinecolor&quot;: &quot;#2a3f5f&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;minorgridcolor&quot;: &quot;white&quot;, &quot;startlinecolor&quot;: &quot;#2a3f5f&quot;}, &quot;baxis&quot;: {&quot;endlinecolor&quot;: &quot;#2a3f5f&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;minorgridcolor&quot;: &quot;white&quot;, &quot;startlinecolor&quot;: &quot;#2a3f5f&quot;}, &quot;type&quot;: &quot;carpet&quot;}], &quot;table&quot;: [{&quot;cells&quot;: {&quot;fill&quot;: {&quot;color&quot;: &quot;#EBF0F8&quot;}, &quot;line&quot;: {&quot;color&quot;: &quot;white&quot;}}, &quot;header&quot;: {&quot;fill&quot;: {&quot;color&quot;: &quot;#C8D4E3&quot;}, &quot;line&quot;: {&quot;color&quot;: &quot;white&quot;}}, &quot;type&quot;: &quot;table&quot;}], &quot;barpolar&quot;: [{&quot;marker&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#E5ECF6&quot;, &quot;width&quot;: 0.5}, &quot;pattern&quot;: {&quot;fillmode&quot;: &quot;overlay&quot;, &quot;size&quot;: 10, &quot;solidity&quot;: 0.2}}, &quot;type&quot;: &quot;barpolar&quot;}], &quot;pie&quot;: [{&quot;automargin&quot;: true, &quot;type&quot;: &quot;pie&quot;}]}, &quot;layout&quot;: {&quot;autotypenumbers&quot;: &quot;strict&quot;, &quot;colorway&quot;: [&quot;#636efa&quot;, &quot;#EF553B&quot;, &quot;#00cc96&quot;, &quot;#ab63fa&quot;, &quot;#FFA15A&quot;, &quot;#19d3f3&quot;, &quot;#FF6692&quot;, &quot;#B6E880&quot;, &quot;#FF97FF&quot;, &quot;#FECB52&quot;], &quot;font&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}, &quot;hovermode&quot;: &quot;closest&quot;, &quot;hoverlabel&quot;: {&quot;align&quot;: &quot;left&quot;}, &quot;paper_bgcolor&quot;: &quot;white&quot;, &quot;plot_bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;polar&quot;: {&quot;bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;angularaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;radialaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}}, &quot;ternary&quot;: {&quot;bgcolor&quot;: &quot;#E5ECF6&quot;, &quot;aaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;baxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}, &quot;caxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;}}, &quot;coloraxis&quot;: {&quot;colorbar&quot;: {&quot;outlinewidth&quot;: 0, &quot;ticks&quot;: &quot;&quot;}}, &quot;colorscale&quot;: {&quot;sequential&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;sequentialminus&quot;: [[0.0, &quot;#0d0887&quot;], [0.1111111111111111, &quot;#46039f&quot;], [0.2222222222222222, &quot;#7201a8&quot;], [0.3333333333333333, &quot;#9c179e&quot;], [0.4444444444444444, &quot;#bd3786&quot;], [0.5555555555555556, &quot;#d8576b&quot;], [0.6666666666666666, &quot;#ed7953&quot;], [0.7777777777777778, &quot;#fb9f3a&quot;], [0.8888888888888888, &quot;#fdca26&quot;], [1.0, &quot;#f0f921&quot;]], &quot;diverging&quot;: [[0, &quot;#8e0152&quot;], [0.1, &quot;#c51b7d&quot;], [0.2, &quot;#de77ae&quot;], [0.3, &quot;#f1b6da&quot;], [0.4, &quot;#fde0ef&quot;], [0.5, &quot;#f7f7f7&quot;], [0.6, &quot;#e6f5d0&quot;], [0.7, &quot;#b8e186&quot;], [0.8, &quot;#7fbc41&quot;], [0.9, &quot;#4d9221&quot;], [1, &quot;#276419&quot;]]}, &quot;xaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;, &quot;title&quot;: {&quot;standoff&quot;: 15}, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;automargin&quot;: true, &quot;zerolinewidth&quot;: 2}, &quot;yaxis&quot;: {&quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;ticks&quot;: &quot;&quot;, &quot;title&quot;: {&quot;standoff&quot;: 15}, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;automargin&quot;: true, &quot;zerolinewidth&quot;: 2}, &quot;scene&quot;: {&quot;xaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2}, &quot;yaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2}, &quot;zaxis&quot;: {&quot;backgroundcolor&quot;: &quot;#E5ECF6&quot;, &quot;gridcolor&quot;: &quot;white&quot;, &quot;linecolor&quot;: &quot;white&quot;, &quot;showbackground&quot;: true, &quot;ticks&quot;: &quot;&quot;, &quot;zerolinecolor&quot;: &quot;white&quot;, &quot;gridwidth&quot;: 2}}, &quot;shapedefaults&quot;: {&quot;line&quot;: {&quot;color&quot;: &quot;#2a3f5f&quot;}}, &quot;annotationdefaults&quot;: {&quot;arrowcolor&quot;: &quot;#2a3f5f&quot;, &quot;arrowhead&quot;: 0, &quot;arrowwidth&quot;: 1}, &quot;geo&quot;: {&quot;bgcolor&quot;: &quot;white&quot;, &quot;landcolor&quot;: &quot;#E5ECF6&quot;, &quot;subunitcolor&quot;: &quot;white&quot;, &quot;showland&quot;: true, &quot;showlakes&quot;: true, &quot;lakecolor&quot;: &quot;white&quot;}, &quot;title&quot;: {&quot;x&quot;: 0.05}, &quot;mapbox&quot;: {&quot;style&quot;: &quot;light&quot;}}}, &quot;xaxis&quot;: {&quot;anchor&quot;: &quot;y&quot;, &quot;domain&quot;: [0.0, 1.0], &quot;matches&quot;: &quot;x2&quot;, &quot;showticklabels&quot;: false}, &quot;yaxis&quot;: {&quot;anchor&quot;: &quot;x&quot;, &quot;domain&quot;: [0.55, 1.0], &quot;title&quot;: {&quot;text&quot;: &quot;Effective Tariff&quot;}}, &quot;xaxis2&quot;: {&quot;anchor&quot;: &quot;y2&quot;, &quot;domain&quot;: [0.0, 1.0], &quot;title&quot;: {&quot;text&quot;: &quot;Year&quot;}}, &quot;yaxis2&quot;: {&quot;anchor&quot;: &quot;x2&quot;, &quot;domain&quot;: [0.0, 0.45], &quot;title&quot;: {&quot;text&quot;: &quot;Effective Tariff&quot;}}, &quot;annotations&quot;: [{&quot;font&quot;: {&quot;size&quot;: 16}, &quot;showarrow&quot;: false, &quot;text&quot;: &quot;Raw Effective Tariff&quot;, &quot;x&quot;: 0.5, &quot;xanchor&quot;: &quot;center&quot;, &quot;xref&quot;: &quot;paper&quot;, &quot;y&quot;: 1.0, &quot;yanchor&quot;: &quot;bottom&quot;, &quot;yref&quot;: &quot;paper&quot;}, {&quot;font&quot;: {&quot;size&quot;: 16}, &quot;showarrow&quot;: false, &quot;text&quot;: &quot;Filtered (ffill) Effective Tariff&quot;, &quot;x&quot;: 0.5, &quot;xanchor&quot;: &quot;center&quot;, &quot;xref&quot;: &quot;paper&quot;, &quot;y&quot;: 0.45, &quot;yanchor&quot;: &quot;bottom&quot;, &quot;yref&quot;: &quot;paper&quot;}], &quot;title&quot;: {&quot;text&quot;: &quot;Comparison of Raw and Filtered Tariffs&lt;br&gt;Product: 911180, Reporter: 156, Partner: 840&quot;}, &quot;height&quot;: 700, &quot;showlegend&quot;: false, &quot;dragmode&quot;: &quot;zoom&quot;}}' data-config='{}'></marimo-plotly>"
        }
      ]
    },
    {
      "id": "BYtC",
      "code_hash": "2c59b8ada7f7f6156dab62444638da7f",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "An ancestor raised an exception (FileNotFoundError): ",
          "traceback": []
        }
      ],
      "console": [
        {
          "type": "stream",
          "name": "stdout",
          "text": "Filtered to select only required data:\n"
        },
        {
          "type": "stream",
          "name": "stderr",
          "text": "<span class=\"codehilite\"><div class=\"highlight\"><pre><span></span><span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/marimo/_runtime/executor.py&quot;</span>, line <span class=\"m\">122</span>, in <span class=\"n\">execute_cell</span>\n<span class=\"w\">    </span><span class=\"n\">exec</span><span class=\"p\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">glbls</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"pm\">~~~~^^^^^^^^^^^^^^^^^^</span>\n  File <span class=\"nb\">&quot;/var/folders/df/j998nyn11sdf0w5cf48pny6m0000gn/T/marimo_80041/__marimo__cell_BYtC_.py&quot;</span>, line <span class=\"m\">26</span>, in <span class=\"n\">&lt;module&gt;</span>\n<span class=\"w\">    </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">input_lf</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"o\">=</span><span class=\"s2\">&quot;streaming&quot;</span><span class=\"p\">))</span>\n<span class=\"w\">          </span><span class=\"pm\">~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^</span>\n  File <span class=\"nb\">&quot;/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/polars/_utils/deprecation.py&quot;</span>, line <span class=\"m\">93</span>, in <span class=\"n\">wrapper</span>\n<span class=\"w\">    </span><span class=\"k\">return</span> <span class=\"n\">function</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  File <span class=\"nb\">&quot;/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/polars/lazyframe/frame.py&quot;</span>, line <span class=\"m\">2224</span>, in <span class=\"n\">collect</span>\n<span class=\"w\">    </span><span class=\"k\">return</span> <span class=\"n\">wrap_df</span><span class=\"p\">(</span><span class=\"n\">ldf</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"p\">))</span>\n<span class=\"w\">                   </span><span class=\"pm\">~~~~~~~~~~~^^^^^^^^^^^^^^^^^^</span>\n<span class=\"gr\">polars.exceptions.InvalidOperationError</span>: <span class=\"n\">&#39;is_in&#39; cannot check for List(String) values in Int32 data</span>\n\n<span class=\"x\">Resolved plan until failure:</span>\n\n<span class=\"x\">\t---&gt; FAILED HERE RESOLVING &#39;sink&#39; &lt;---</span>\n<span class=\"x\">FILTER col(&quot;year&quot;).is_in([[&quot;2018&quot;, &quot;2019&quot;, \u2026 &quot;2023&quot;]])</span>\n<span class=\"x\">FROM</span>\n<span class=\"x\">  SELECT [col(&quot;year&quot;), col(&quot;partner_country&quot;).alias(&quot;importer&quot;), col(&quot;reporter_country&quot;).alias(&quot;exporter&quot;), col(&quot;product_code&quot;), col(&quot;value&quot;).log().alias(&quot;log_value&quot;), col(&quot;quantity&quot;).log().alias(&quot;log_quantity&quot;), col(&quot;official_effective_tariff&quot;).filter([([(col(&quot;partner_country&quot;)) == (&quot;840&quot;)]) &amp; ([(col(&quot;reporter_country&quot;)) == (&quot;156&quot;)])]).mean().over([col(&quot;year&quot;), col(&quot;product_code&quot;)]).alias(&quot;tariff_us_china&quot;)]</span>\n<span class=\"x\">  FROM</span>\n<span class=\"x\">    simple \u03c0 20/21 [&quot;year&quot;, &quot;reporter_country&quot;, ... 18 other columns]</span>\n<span class=\"x\">       WITH_COLUMNS:</span>\n<span class=\"x\">       [col(&quot;__temp_ffill_official_effective_tariff&quot;).fill_null_with_strategy().over([col(&quot;reporter_country&quot;), col(&quot;partner_country&quot;), col(&quot;product_code&quot;)]).alias(&quot;official_effective_tariff&quot;)] </span>\n<span class=\"x\">         WITH_COLUMNS:</span>\n<span class=\"x\">         [col(&quot;official_effective_tariff&quot;).fill_null_with_strategy().over([col(&quot;reporter_country&quot;), col(&quot;partner_country&quot;), col(&quot;product_code&quot;)]).alias(&quot;__temp_ffill_official_effective_tariff&quot;)] </span>\n<span class=\"x\">          SORT BY [col(&quot;year&quot;)]</span>\n<span class=\"x\">            FILTER col(&quot;reporter_country&quot;).is_in([[&quot;840&quot;, &quot;156&quot;, \u2026 &quot;826&quot;]])</span>\n<span class=\"x\">            FROM</span>\n<span class=\"x\">              FILTER col(&quot;partner_country&quot;).is_in([[&quot;840&quot;, &quot;156&quot;, \u2026 &quot;826&quot;]])</span>\n<span class=\"x\">              FROM</span>\n<span class=\"x\">                Parquet SCAN [data/final/unified_trade_tariff_partitioned/year=1995/0.parquet, ... 28 other sources]</span>\n<span class=\"x\">                PROJECT 19/20 COLUMNS</span>\n</pre></div>\n</span>"
        },
        {
          "type": "stream",
          "name": "stderr",
          "text": "\u001b[31m[E 250520 17:17:08 get_datasets:62]\u001b(B\u001b[m Failed to get table data for variable input_lf\n    Traceback (most recent call last):\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/marimo/_data/get_datasets.py\", line 50, in _get_data_table\n        for column_name, column_type in table.get_field_types()\n                                        ~~~~~~~~~~~~~~~~~~~~~^^\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/marimo/_plugins/ui/_impl/tables/table_manager.py\", line 140, in get_field_types\n        for column_name in self.get_column_names()\n                           ~~~~~~~~~~~~~~~~~~~~~^^\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/marimo/_plugins/ui/_impl/tables/narwhals_table.py\", line 432, in get_column_names\n        column_names = self.nw_schema.names()\n                       ^^^^^^^^^^^^^^\n      File \"/Users/lukasalemu/.local/share/uv/python/cpython-3.13.2-macos-aarch64-none/lib/python3.13/functools.py\", line 1042, in __get__\n        val = self.func(instance)\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/marimo/_plugins/ui/_impl/tables/narwhals_table.py\", line 212, in nw_schema\n        return cast(nw.Schema, self.data.collect_schema())\n                               ~~~~~~~~~~~~~~~~~~~~~~~~^^\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/narwhals/dataframe.py\", line 2504, in collect_schema\n        return super().collect_schema()\n               ~~~~~~~~~~~~~~~~~~~~~~^^\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/narwhals/dataframe.py\", line 129, in collect_schema\n        native_schema = dict(self._compliant_frame.collect_schema())\n                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n      File \"/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/narwhals/_polars/dataframe.py\", line 649, in collect_schema\n        raise catch_polars_exception(e, self._backend_version) from None\n    narwhals.exceptions.InvalidOperationError: 'is_in' cannot check for List(String) values in Int32 data\n    \n    Resolved plan until failure:\n    \n    \t---> FAILED HERE RESOLVING 'filter' failed <---\n    FILTER col(\"year\").is_in([[\"2018\", \"2019\", \u2026 \"2023\"]])\n    FROM\n      SELECT [col(\"year\"), col(\"partner_country\").alias(\"importer\"), col(\"reporter_country\").alias(\"exporter\"), col(\"product_code\"), col(\"value\").log().alias(\"log_value\"), col(\"quantity\").log().alias(\"log_quantity\"), col(\"official_effective_tariff\").filter([([(col(\"partner_country\")) == (\"840\")]) & ([(col(\"reporter_country\")) == (\"156\")])]).mean().over([col(\"year\"), col(\"product_code\")]).alias(\"tariff_us_china\")]\n      FROM\n        simple \u03c0 20/21 [\"year\", \"reporter_country\", ... 18 other columns]\n           WITH_COLUMNS:\n           [col(\"__temp_ffill_official_effective_tariff\").fill_null_with_strategy().over([col(\"reporter_country\"), col(\"partner_country\"), col(\"product_code\")]).alias(\"official_effective_tariff\")] \n             WITH_COLUMNS:\n             [col(\"official_effective_tariff\").fill_null_with_strategy().over([col(\"reporter_country\"), col(\"partner_country\"), col(\"product_code\")]).alias(\"__temp_ffill_official_effective_tariff\")] \n              SORT BY [col(\"year\")]\n                FILTER [(col(\"reporter_country\").is_in([[\"840\", \"156\", \u2026 \"826\"]])) & (col(\"partner_country\").is_in([[\"840\", \"156\", \u2026 \"826\"]]))]\n                FROM\n                  Parquet SCAN [data/final/unified_trade_tariff_partitioned/year=1995/0.parquet, ... 28 other sources]\n                  PROJECT 19/20 COLUMNS\n"
        }
      ]
    },
    {
      "id": "RGSE",
      "code_hash": "4a604a876c8b7b3f7dcf2903087e29c1",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "An ancestor raised an exception (FileNotFoundError): ",
          "traceback": []
        }
      ],
      "console": []
    },
    {
      "id": "Kclp",
      "code_hash": "7bbd8617bff89945781b121f3add6f30",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": [
        {
          "type": "stream",
          "name": "stdout",
          "text": "Regression formula is:\nlog_value ~ tariff_interaction_2018 + tariff_interaction_2019 + tariff_interaction_2020 + tariff_interaction_2021 + tariff_interaction_2022 + tariff_interaction_2023 | alpha_ipt + alpha_jpt + alpha_ij\n"
        }
      ]
    },
    {
      "id": "emfo",
      "code_hash": "8e371984f9be174e07a0649fe49cdba0",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "An ancestor raised an exception (FileNotFoundError): ",
          "traceback": []
        }
      ],
      "console": []
    },
    {
      "id": "Hstk",
      "code_hash": "274838cbbb14af0fd6391e7355fbd06d",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "An ancestor raised an exception (FileNotFoundError): ",
          "traceback": []
        }
      ],
      "console": []
    },
    {
      "id": "nWHF",
      "code_hash": "5ae417fcb50ebe8c4da98191ff855d0f",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "An ancestor raised an exception (FileNotFoundError): ",
          "traceback": []
        }
      ],
      "console": []
    },
    {
      "id": "iLit",
      "code_hash": "e0e3bba34640836a7dd27ccbd8bbc226",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "[Errno 2] No such file or directory: 'src/mpil_tariff_trade_analysis/dev3/model_ols_v2_OFFICIAL_INCLUDED.pkl'",
          "traceback": []
        }
      ],
      "console": [
        {
          "type": "stream",
          "name": "stderr",
          "text": "<span class=\"codehilite\"><div class=\"highlight\"><pre><span></span><span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;/Users/lukasalemu/Documents/00. Bank of England/03. MPIL/tariff_trade_analysis/.venv/lib/python3.13/site-packages/marimo/_runtime/executor.py&quot;</span>, line <span class=\"m\">122</span>, in <span class=\"n\">execute_cell</span>\n<span class=\"w\">    </span><span class=\"n\">exec</span><span class=\"p\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">glbls</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"pm\">~~~~^^^^^^^^^^^^^^^^^^</span>\n  File <span class=\"nb\">&quot;/var/folders/df/j998nyn11sdf0w5cf48pny6m0000gn/T/marimo_85641/__marimo__cell_iLit_.py&quot;</span>, line <span class=\"m\">1</span>, in <span class=\"n\">&lt;module&gt;</span>\n<span class=\"w\">    </span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span>\n<span class=\"w\">         </span><span class=\"pm\">~~~~^</span>\n<span class=\"w\">    </span>    <span class=\"s2\">&quot;src/mpil_tariff_trade_analysis/dev3/model_ols_v2_OFFICIAL_INCLUDED.pkl&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"pm\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n<span class=\"w\">    </span>    <span class=\"s2\">&quot;rb&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"pm\">^^^^^</span>\n<span class=\"w\">    </span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"pm\">^</span>\n<span class=\"gr\">FileNotFoundError</span>: <span class=\"n\">[Errno 2] No such file or directory: &#39;src/mpil_tariff_trade_analysis/dev3/model_ols_v2_OFFICIAL_INCLUDED.pkl&#39;</span>\n</pre></div>\n</span>"
        }
      ]
    },
    {
      "id": "ZHCJ",
      "code_hash": "4a4a39e190e7e82bdab5272f32386e00",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "An ancestor raised an exception (FileNotFoundError): ",
          "traceback": []
        }
      ],
      "console": []
    },
    {
      "id": "ROlb",
      "code_hash": "1a9d5b389e4683815eb6496d33165a7e",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<span class=\"markdown prose dark:prose-invert\"><h2 id=\"interpreting-results\">Interpreting results:</h2>\n<span class=\"paragraph\">RMSE: standard deviation of the regression residuals (the differences between observed and predicted values).</span>\n<span class=\"paragraph\">R2: X% of the variation in log_quantity is explained by the model including all the fixed effects. Commonly high in FE models given the FE explain a lot of the variation</span>\n<span class=\"paragraph\">R2 Within: measures the proportion of the variation within the fixed effect groups (e.g., within each importer-exporter-product unit over time, after accounting for the broader FEs) that is explained by tariff interaction terms. Low value implies very little variance is in log import_quantities is explained by tariff interaction variables.</span>\n<h2 id=\"replicating-figure-2\">Replicating Figure 2</h2>\n<span class=\"paragraph\">What does my equivalent 'figure 2' look like?</span></span>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "qnkX",
      "code_hash": "38ee969304b4695c2b0dfb3c5f85e099",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "An ancestor raised an exception (FileNotFoundError): ",
          "traceback": []
        }
      ],
      "console": []
    },
    {
      "id": "TqIu",
      "code_hash": "b8911e3137a6b25f3d9e2d22c78fae2f",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "An ancestor raised an exception (FileNotFoundError): ",
          "traceback": []
        }
      ],
      "console": []
    },
    {
      "id": "Vxnm",
      "code_hash": "1ec14b2ab56bbc10708ceadc5ad3fe43",
      "outputs": [
        {
          "type": "error",
          "ename": "exception",
          "evalue": "An ancestor raised an exception (FileNotFoundError): ",
          "traceback": []
        }
      ],
      "console": []
    }
  ]
}